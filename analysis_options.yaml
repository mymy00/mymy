# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # Customize rules based on your preferences and project requirements
    prefer_single_quotes: true  # Example: Prefer single quotes for strings
    prefer_const_constructors: true  # Example: Prefer const constructors where possible
    avoid_unnecessary_containers: true  # Example: Avoid unnecessary Container widgets
    
    # Example: Ensure GoogleSignIn class is imported correctly
    prefer_relative_imports:
      severity: error
      include: '**/*.dart'
      # Ensure that `google_sign_in` is imported correctly in your files
      # Replace `package:your_package/google_sign_in.dart` with the actual path
      # where `google_sign_in` is imported
      exclude: ['lib/main.dart', 'lib/your_file.dart']  # Exclude main.dart and your specific file

    # Example: Ensure imports are sorted correctly
    sort_pub_dependencies:
      severity: error

    # Example: Ensure proper usage of async/await
    prefer_async_to_sync:
      severity: error

